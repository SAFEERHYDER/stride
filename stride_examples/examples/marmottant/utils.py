import functools
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.widgets import Slider


def plot_wavefields(wavefields, kwargs):
    def update(figure, axis, step):
        if len(axis.images):
            axis.images[-1].colorbar.remove()

        axis.clear()

        first = None
        for wavefield, kwarg in zip(wavefields, kwargs):
            _wavefield = wavefield[step][30:-30, 30:-30]
            im = axis.imshow(_wavefield.T, origin='lower', **kwarg)

            cb = plt.colorbar(im, ax=axis, shrink=0.75, format='%.0e')
            if first is None:
                cb.set_label('pressure (Pa)')
                first = False

        figure.canvas.draw_idle()

    figure = plt.figure()
    axis = figure.add_subplot(111)
    plt.subplots_adjust(bottom=0.25)
    axis.margins(x=0)

    ax_shot = plt.axes([0.15, 0.1, 0.7, 0.03])
    time_range = (0, wavefields[0].shape[0] - 1)
    slider = Slider(ax_shot, 'time',
                    time_range[0], time_range[1],
                    valinit=0, valstep=1)

    update = functools.partial(update, figure, axis)
    update(0)

    slider.on_changed(update)
    axis.slider = slider


def test_signal(num):
    vals = np.array(
        [0.0000, 0.0000, -0.0001, -0.0007, -0.0014, -0.0017, -0.0012, 0.0002, 0.0020, 0.0033, 0.0036, 0.0029, 0.0015,
         -0.0003, -0.0021, -0.0038, -0.0049, -0.0050,
         -0.0036, -0.0009, 0.0023, 0.0047, 0.0054, 0.0042, 0.0018, -0.0009, -0.0030, -0.0041, -0.0038, -0.0021, 0.0009,
         0.0042, 0.0065, 0.0064, 0.0036, -0.0012,
         -0.0060, -0.0087, -0.0085, -0.0059, -0.0021, 0.0015, 0.0044, 0.0063, 0.0071, 0.0064, 0.0040, 0.0004, -0.0032,
         -0.0055, -0.0056, -0.0034, 0.0001, 0.0036,
         0.0058, 0.0058, 0.0032, -0.0013, -0.0065, -0.0102, -0.0106, -0.0069, -0.0004, 0.0063, 0.0105, 0.0106, 0.0071,
         0.0021, -0.0024, -0.0048, -0.0052, -0.0039,
         -0.0017, 0.0011, 0.0042, 0.0068, 0.0075, 0.0052, -0.0004, -0.0079, -0.0147, -0.0178, -0.0153, -0.0071, 0.0044,
         0.0157, 0.0229, 0.0232, 0.0161, 0.0033,
         -0.0109, -0.0215, -0.0235, -0.0146, 0.0038, 0.0253, 0.0403, 0.0397, 0.0196, -0.0150, -0.0511, -0.0731, -0.0703,
         -0.0429, -0.0016, 0.0380, 0.0626, 0.0665,
         0.0517, 0.0251, -0.0044, -0.0274, -0.0354, -0.0239, 0.0035, 0.0336, 0.0504, 0.0453, 0.0251, 0.0073, 0.0040,
         0.0046, -0.0238, -0.1117, -0.2512, -0.3771,
         -0.3864, -0.1983, 0.1808, 0.6417, 0.9681, 0.9814, 0.6142, -0.0381, -0.7472, -1.2477, -1.3454, -0.9950, -0.3137,
         0.4708, 1.1012, 1.3784, 1.2189, 0.6788,
         -0.0703, -0.7926, -1.2630, -1.3356, -0.9863, -0.3231, 0.4480, 1.0835, 1.3770, 1.2298, 0.6881, -0.0637, -0.7627,
         -1.1668, -1.1516, -0.7601, -0.1787, 0.3516,
         0.6462, 0.6413, 0.4342, 0.1658, -0.0371, -0.1215, -0.1127, -0.0712, -0.0459, -0.0489, -0.0603, -0.0574,
         -0.0303, 0.0078, 0.0374, 0.0435, 0.0271, -0.0028,
         -0.0317, -0.0483, -0.0466, -0.0253, 0.0097, 0.0467, 0.0719, 0.0742, 0.0513, 0.0126, -0.0270, -0.0508, -0.0510,
         -0.0309, -0.0025, 0.0205, 0.0306, 0.0248,
         0.0086, -0.0096, -0.0230, -0.0265, -0.0199, -0.0060, 0.0093, 0.0208, 0.0255, 0.0226, 0.0129, 0.0009, -0.0094,
         -0.0134, -0.0114, -0.0048, 0.0031, 0.0086,
         0.0095, 0.0061, 0.0006, -0.0045, -0.0068, -0.0069, -0.0045, -0.0011, 0.0024, 0.0050, 0.0068, 0.0075, 0.0071,
         0.0050, 0.0004, -0.0046, -0.0075, -0.0062,
         -0.0000, 0.0070, 0.0113, 0.0102, 0.0043, -0.0028, -0.0078, -0.0088, -0.0067, -0.0039, -0.0015, 0.0000, 0.0027,
         0.0066, 0.0099, 0.0105, 0.0072, 0.0010,
         -0.0037, -0.0049, -0.0032, -0.0009, -0.0011, -0.0033, -0.0038, -0.0004, 0.0063, 0.0122, 0.0118, 0.0044,
         -0.0065, -0.0139, -0.0135, -0.0062, 0.0029, 0.0089,
         0.0099, 0.0080, 0.0064, 0.0060, 0.0048, 0.0007, -0.0061, -0.0127, -0.0140, -0.0080, 0.0023, 0.0118, 0.0155,
         0.0117, 0.0029, -0.0051, -0.0090, -0.0075,
         -0.0024, 0.0030, 0.0057, 0.0048, 0.0015, -0.0017, -0.0026, -0.0003, 0.0036, 0.0061, 0.0046, -0.0012, -0.0071,
         -0.0086, -0.0033, 0.0060, 0.0132, 0.0123,
         0.0024, -0.0098, -0.0160, -0.0111, 0.0022, 0.0153, 0.0184, 0.0086, -0.0070, -0.0176, -0.0151, -0.0007, 0.0160,
         0.0225, 0.0135, -0.0060, -0.0226, -0.0249,
         -0.0104, 0.0124, 0.0286, 0.0277, 0.0098, -0.0139, -0.0285, -0.0252, -0.0063, 0.0160, 0.0276, 0.0218, 0.0030,
         -0.0165, -0.0240, -0.0154, 0.0037, 0.0202,
         0.0239, 0.0127, -0.0065, -0.0215, -0.0231, -0.0104, 0.0084, 0.0223, 0.0234, 0.0115, -0.0061, -0.0193, -0.0207,
         -0.0101, 0.0053, 0.0170, 0.0187, 0.0103,
         -0.0027, -0.0129, -0.0145, -0.0077, 0.0025, 0.0103, 0.0115, 0.0064, -0.0012, -0.0069, -0.0072, -0.0031, 0.0021,
         0.0053, 0.0049, 0.0019, -0.0012, -0.0027,
         -0.0016, 0.0008, 0.0022, 0.0017, -0.0002, -0.0021, -0.0022, -0.0001, 0.0031, 0.0053, 0.0044, 0.0005, -0.0045,
         -0.0076, -0.0065, -0.0011, 0.0061, 0.0112,
         0.0106, 0.0042, -0.0050, -0.0123, -0.0135, -0.0075, 0.0030, 0.0127, 0.0163, 0.0118, 0.0014, -0.0099, -0.0164,
         -0.0148, -0.0057, 0.0065, 0.0156, 0.0172,
         0.0105, -0.0012, -0.0122, -0.0172, -0.0137, -0.0035, 0.0086, 0.0164, 0.0163, 0.0084, -0.0034, -0.0135, -0.0169,
         -0.0122, -0.0017, 0.0097, 0.0163, 0.0153,
         0.0072, -0.0039, -0.0130, -0.0160, -0.0115, -0.0018, 0.0085, 0.0146, 0.0141, 0.0073, -0.0024, -0.0106, -0.0138,
         -0.0108, -0.0031, 0.0055, 0.0113, 0.0119,
         0.0074, 0.0001, -0.0067, -0.0102, -0.0091, -0.0043, 0.0018, 0.0067, 0.0084, 0.0066, 0.0024, -0.0023, -0.0055,
         -0.0062, -0.0044, -0.0011, 0.0022, 0.0042,
         0.0043, 0.0029, 0.0006, -0.0015, -0.0027, -0.0027, -0.0017, -0.0003, 0.0009, 0.0015, 0.0015, 0.0010, 0.0002,
         -0.0004, -0.0007, -0.0006, -0.0004, -0.0001,
         0.0001, 0.0002, 0.0001, 0.0000, 0.0000, 0.0000, 0.0001, 0.0002, 0.0002, 0.0001, -0.0001, -0.0002, -0.0002,
         -0.0002, -0.0001, 0.0001, 0.0002, 0.0002,
         0.0002, 0.0001, -0.0000, -0.0001, -0.0002, -0.0001, -0.0001, 0.0000, 0.0001, 0.0001, 0.0001, 0.0000, -0.0000,
         -0.0001, -0.0001, -0.0001, -0.0000, -0.0000,
         0.0000, 0.0001, 0.0001, 0.0000, 0.0000, -0.0000, -0.0000, -0.0000, -0.0000, -0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, -0.0000, -0.0000, -0.0000,
         -0.0000, -0.0000, -0.0000, -0.0000, -0.0000, -0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, -0.0000, -0.0000,
         -0.0000, -0.0000, -0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, -0.0000, -0.0000, -0.0000, -0.0000, -0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         -0.0000, -0.0000, -0.0000, -0.0000, -0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, -0.0000, -0.0000, -0.0000, -0.0000, -0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, -0.0000, -0.0000, -0.0000,
         -0.0000, -0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, -0.0000, -0.0000, -0.0000, -0.0000, -0.0000, -0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         -0.0000, -0.0000, -0.0000, -0.0000, -0.0000, -0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000]) * 1e5
    fs = 80e6

    bub_fs = 1e9
    initial = np.arange(vals.shape[0])
    final = np.linspace(0, vals.shape[0], int(vals.shape[0] * bub_fs // fs))
    vals = np.interp(final, initial, vals)
    vals = np.pad(vals, ((0, num - len(vals)),))

    return vals
